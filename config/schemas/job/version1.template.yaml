# Metadata keys used to construct the schema
# This key is stripped when the file is loaded
__meta__:
  VERSION: &VERSION
    const: 1
  SHARED_REQUIRED: &SHARED_REQUIRED
    required: ["created_at", "job_type", "rendered_path", "script_id", "version"]
  SHARED_PROPERTIES: &SHARED_PROPERTIES
    created_at: { "type": "string", "format": "date-time" }
    rendered_path: { "type": "string", "minLength": 1 }
    script_id: { "type": "string", "minLength": 1 }
    version:
      <<: *VERSION
  SUBMITTED_REQUIRED: &SUBMITTED_REQUIRED
    required: ['submit_status', 'submit_stdout', 'submit_stderr']
  SUBMITTED_PROPERTIES: &SUBMITTED_PROPERTIES
    submit_status: { const: 0 }
    submit_stdout: { "type" : "string" }
    submit_stderr: { "type" : "string" }
    results_dir: { "type" : "string", "minLength" : 1 }
  SCHED_ID_REQUIRED: &SCHED_ID_REQUIRED
    required: ["scheduler_id"]
  SCHED_ID_PROPERTIES: &SCHED_ID_PROPERTIES
    scheduler_id: { "type" : "string", "minLength" : 1 }
  STATES_ENUM: &STATES_ENUM
    enum: ["PENDING", "RUNNING", "FAILED", "COMPLETED", "CANCELLED", "UNKNOWN"]

type: "object"
additionalProperties: true
<<: *SHARED_REQUIRED
properties:
  <<: *SHARED_PROPERTIES
  job_type:
    enum: ["SUBMITTING", "MONITORING", "SINGLETON", "ARRAY", "FAILED_SUBMISSION"]
oneOf:
  # SUBMITTING Jobs
  # NOTE: All jobs are created in the state before submit.sh is ran
  - type: "object"
    additionalProperties: false
    <<: *SHARED_REQUIRED
    properties:
      <<: *SHARED_PROPERTIES
      job_type: { "const" : "SUBMITTING" }

  # MONITORING Jobs
  # NOTE: This represents jobs which where succesfully submitted but have
  # not been monitored for the first time
  - type: "object"
    additionalProperties: false
    allOf:
      - *SHARED_REQUIRED
      - *SUBMITTED_REQUIRED
    properties:
      <<: *SHARED_PROPERTIES
      <<: *SUBMITTED_PROPERTIES
      job_type: { "const" : "MONITORING" }

  # FAILED_SUBMISSION Jobs
  - type: "object"
    additionalProperties: false
    allOf:
      - *SHARED_REQUIRED
      - required: ["submit_status", "submit_stdout", "submit_stderr"]
    properties:
      <<: *SHARED_PROPERTIES
      job_type: { "const" : "FAILED_SUBMISSION" }
      submit_status: { "type" : "integer", "minimum" : 1, "maximum" : 255 }
      submit_stdout: { "type" : "string" }
      submit_stderr: { "type" : "string" }

  # SINGLETON Jobs
  - type: "object"
    additionalProperties: false
    allOf:
      - *SHARED_REQUIRED
      - *SUBMITTED_REQUIRED
      - *SCHED_ID_REQUIRED
      - required: ['state', 'scheduler_state']
    properties:
      # Required
      <<: *SHARED_PROPERTIES
      <<: *SUBMITTED_PROPERTIES
      <<: *SCHED_ID_PROPERTIES
      job_type: { "const" : "SINGLETON" }
      state: *STATES_ENUM
      scheduler_state: { "type" : "string", "minLength" : 1 }
      # Optional
      #
      # NOTE: The transient dependency between 'state' and times
      # are enforced by the monitor scripts.
      #
      # It is assumed they metadata will not be edited manually,
      # and thus will remain accurate.
      estimated_start_time: { "type" : ['date-time', 'null'] }
      estimated_end_time: { "type" : ['date-time', 'null'] }
      start_time: { "type" : ["date-time", "null"] }
      end_time: { "type" : ["date-time", "null"] }
      reason: { "type" : ["string", "null"] }
      # Optional - Non empty
      stdout_path: { "type" : "string", "minLength" : 1 }
      stderr_path: { "type" : "string", "minLength" : 1 }

  # ARRAY Jobs
  - type: "object"
    additionalProperties: false
    allOf:
      - *SHARED_REQUIRED
      - *SUBMITTED_REQUIRED
      - *SCHED_ID_REQUIRED
      - required: ['lazy']
    properties:
      # Required
      <<: *SHARED_PROPERTIES
      <<: *SUBMITTED_PROPERTIES
      <<: *SCHED_ID_PROPERTIES
      job_type: { "const" : "ARRAY" }
      lazy: { "type" : "boolean" }
      # Optional
      estimated_start_time: { "type" : ['date-time', 'null'] }
      estimated_end_time: { "type" : ['date-time', 'null'] }

      # XXX: Defunct field, TBC if it can be removed
      cancelled: { "type" : "boolean" }
